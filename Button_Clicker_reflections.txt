To make the settings button display a <message>

-under public boolean onOptionsItemSelected(MenuItem item)
-under if (id == R.id.action_settings)
-add the lines
	if (id == R.id.action_settings){
		Toast toastMessage = Toast.makeText (this, "<message>", Toast.LENGTH_LONG);
		toastMessage.show();
		return true;
	}


alt+1, and alt+6 are useful display toggles.

xml files store layout.
every item on screen is called a view. they all have different id's

Java code file: MainActivity:
to make this do something, must associate frames in the code.

Example:
public class MainActivity extends AppCompatActivity{

	private Button <buttonName>;/// variable created////
	private TextView <messageName>;/// variable created///

	@Override
	protected void onCreate (Bundle savedInstanceState){
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		<buttonName> = (Button) findViewById(R.id.<buttonID>); //
			//sets button variable defined above with the appropriate ID///
			//must be done after setContentView()///
			//the (Button) is basically casting the findView return as a button type that will correspond with variable <buttonName>///
		<messageName> = (TextView) findViewById(R.id.<textViewID>);//

		View.OnClickListener <OCL name> = new View.OnClickListener{//made
			@Override//
			public void onClick(View v){//
				<messageName>.setText("<Message to change on click>");//
			}//
		};//
			///make OnClickListener class called <OCL Name>. its action is to
			///set the text on the messageName
		<buttonName>.setOnClickListener(<OCL name>);
			///This sets the button made earlier a clickerListener

		Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        ...
        ...
        ...
..


to cast integer to string
Integer.toString(<int>);

private int counter = 0;
...
View.OnClickListener myOCL = new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                counter += 1;//
                String counterStr = Integer.toString(counter);//int to str
                String out = "Button clicked " + counterStr + " time";//
                if(counter != 1){//
                    out += "s";//I like this style
                }//
                myText.setText(out);//prints message
            }
        };


...
Later:
Toast toastMessage = Toast.makeText(this, "The myText value is:"+ myText.getText(), Toast.LENGTH_LONG);


note the getText();